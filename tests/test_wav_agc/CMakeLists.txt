cmake_minimum_required(VERSION 3.13)

set(XMOS_TOOLS_PATH $ENV{XMOS_TOOL_PATH}/bin)

#**********************
# Setup XMOS toolchain
#**********************
if(NOT DEFINED ENV{AGC_PATH})
    message(FATAL_ERROR "AGC_PATH environment variable not defined")
    # some more commands
endif()
include("$ENV{AGC_PATH}/cmake_utils/xmos_toolchain.cmake")

#**********************
# Project
#**********************
# Disable in-source build.
if("${CMAKE_SOURCE_DIR}" STREQUAL "${CMAKE_BINARY_DIR}")
    message(FATAL_ERROR "In-source build is not allowed! Please specify a build folder.\n\tex:cmake -B build")
endif()


## Define project
project(test_wav_agc VERSION 0.1.0)

## Enable languages for project
enable_language(CXX XC C ASM)

#**********************
# Build flags
#**********************
add_executable(test_wav_agc)


set(APP_COMPILER_FLAGS
        "-O2"
        "-g"
        "-Wall"
        "-report"
        "-fxscope"
        "-target=XCORE-AI-EXPLORER"
        "${CMAKE_CURRENT_SOURCE_DIR}/config.xscope"
        "-D__process_wav_conf_h_exists__"
        )

set(APP_SRCS
        "./src/test_wav_agc.xc"
    )

set(APP_INCLUDES
        "src"
        "autogenerated"
    )

set(APP_DEPENDENT_MODULES
        "lib_agc(>=7.0.2)"
        "lib_dsp(>=6.0.1)"
        "lib_voice_toolbox(>=8.0.0)"
        "lib_vad(>=1.0.3)"
        "audio_test_tools(>=4.2.0)"
    )

include("$ENV{AGC_PATH}/cmake_utils/agc.cmake")

set_target_properties(test_wav_agc PROPERTIES OUTPUT_NAME test_wav_agc.xe)

target_compile_options(test_wav_agc PRIVATE ${APP_COMPILER_FLAGS})

target_include_directories(test_wav_agc
  PRIVATE ${APP_INCLUDES}
  PRIVATE ${AGC_INCLUDES_ALL}
)

target_sources(test_wav_agc
    PRIVATE ${APP_SRCS}
    PRIVATE ${AGC_SRCS_ALL})


add_custom_target(
        always_run_target ALL
        COMMAND python $ENV{AGC_PATH}/lib_agc/generate_config.py
        COMMAND mv autogenerated ${CMAKE_CURRENT_SOURCE_DIR}/.
        COMMENT "Generating AGC config"
)

add_dependencies(test_wav_agc always_run_target)

target_link_options(test_wav_agc PRIVATE ${APP_COMPILER_FLAGS})


## Set any additional flags only for C++
set(CMAKE_CXX_FLAGS  "-std=c++11")

## Register the application
#XMOS_REGISTER_APP()
