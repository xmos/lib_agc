include(CMakeLanguageInformation)
include(CMakeCommonLanguageInclude)

if(NOT CMAKE_INCLUDE_FLAG_XC)
  set(CMAKE_INCLUDE_FLAG_XC ${CMAKE_INCLUDE_FLAG_C})
endif()

set(CMAKE_XC_FLAGS_INIT "$ENV{XCFLAGS} ${CMAKE_XC_FLAGS_INIT}")

# Create a static archive incrementally for large object file counts.
# If CMAKE_CXX_CREATE_STATIC_LIBRARY is set it will override these.
if(NOT DEFINED CMAKE_XC_ARCHIVE_CREATE)
  set(CMAKE_XC_ARCHIVE_CREATE "<CMAKE_AR> qc <TARGET> <LINK_FLAGS> <OBJECTS>")
endif()
if(NOT DEFINED CMAKE_XC_ARCHIVE_APPEND)
  set(CMAKE_XC_ARCHIVE_APPEND "<CMAKE_AR> q <TARGET> <LINK_FLAGS> <OBJECTS>")
endif()
if(NOT DEFINED CMAKE_XC_ARCHIVE_FINISH)
  set(CMAKE_XC_ARCHIVE_FINISH "<CMAKE_RANLIB> <TARGET>")
endif()

# Compile an XC file into an object file
if(NOT CMAKE_XC_COMPILE_OBJECT)
  set(CMAKE_XC_COMPILE_OBJECT
    "<CMAKE_XC_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT> -x xc -c <SOURCE>")
endif()

if(NOT CMAKE_XC_LINK_EXECUTABLE)
  set(CMAKE_XC_LINK_EXECUTABLE
    "<CMAKE_XC_COMPILER> <FLAGS> <CMAKE_XC_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES>")
endif()

set(CMAKE_XC_CREATE_SHARED_LIBRARY "<CMAKE_AR> <TARGET> <LINK_FLAGS> <OBJECTS>")
set(CMAKE_XC_CREATE_SHARED_MODULE "XC_NO_CREATE_SHARED_MODULE")

set(CMAKE_XC_INFORMATION_LOADED 1)
